{"version":3,"sources":["assets/images/title.svg","redux/reducers/actionTypes.js","redux/reducers/actions.js","helpers/apiClient.js","services/UserService.js","components/Settings.js","redux/reducers/thunk.js","redux/reducers/reducer.js","rootReducer.js","redux/store/configureStore.js","components/Questions.js","components/EndGame.js","components/Rank.js","components/StartGame.js","assets/styles/GlobalStyles.js","assets/styles/theme.js","components/templates/MainTemplate.js","views/Root.js","index.js"],"names":["_path","categoriesType","optionsTypes","questionsTypes","scoreAndIndexTypes","helpersTypes","rankTypes","Actions","categoriesLoad","categories","type","payload","categoriesLoadErrors","errorMessage","questionsLoad","questions","questionsLoadErrors","addToRank","name","amount","score","apiClient","axios","create","baseURL","process","responseType","getAllCategories","get","getAllQuestions","category","difficulty","params","Wrapper","styled","div","StyledLabel","label","StyledInput","input","StyledSelect","select","StyledForm","form","StyledOption","option","StyledButton","button","Settings","dispatch","useDispatch","useSelector","state","options","questionType","history","useHistory","useEffect","UserService","then","response","actions","data","trivia_categories","catch","error","onSubmit","e","preventDefault","results","loadQuestionsAsync","push","htmlFor","value","onChange","target","map","id","min","max","initialState","gameScoreAndIndex","index","helpers","markedAnswer","answerSelected","rank","Reducers","categoriesReducer","optionsReducer","questionsReducer","scoreIndexReducer","helpersReducer","rankReducer","rootReducer","combineReducers","scoreAndIndex","configureStore","middlewares","thunk","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","createStore","Questions","questionIndex","store","useStore","question","answer","correct_answer","useState","answers","setAnswers","decodeHTML","html","txt","document","createElement","innerHTML","addClass","console","log","incorrectAnswers","incorrect_answers","concat","sort","Math","random","StyledQuestion","StyledUl","ul","StyledLi","li","handleClickAnswer","textContent","i","onClick","className","length","idTimeout","setTimeout","newScore","getState","clearTimeout","EndGame","Rank","usersRank","user","goBack","_excluded","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTitle","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","d","ForwardRef","StyledH1","Title","theme","colors","gamboge","h1","StartGame","GlobalStyles","createGlobalStyle","white","black","richBlack","blueSapphire","viridianGreen","middleBlueGreen","mediumChampagne","alloyOrange","mahogany","rufous","rubyRed","MainTemplate","children","Root","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a152fd56.chunk.js","sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTitle(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 611,\n    height: 130,\n    viewBox: \"0 0 611 130\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M107.375 36.33C109.755 36.61 111.599 37.2167 112.905 38.15C114.259 39.0367 114.935 40.46 114.935 42.42C114.935 44.38 114.235 45.8267 112.835 46.76C111.482 47.6933 109.849 48.2767 107.935 48.51C106.022 48.6967 103.549 48.79 100.515 48.79C97.5286 48.79 95.0786 48.6967 93.1653 48.51C91.252 48.2767 89.6186 47.6933 88.2653 46.76C86.912 45.8267 86.2353 44.38 86.2353 42.42C86.2353 40.5067 86.8653 39.1067 88.1253 38.22C89.432 37.2867 91.2053 36.6567 93.4453 36.33C93.212 33.6233 93.0953 29.75 93.0953 24.71C93.0953 20.1833 93.1886 16.5433 93.3753 13.79C90.6686 13.51 88.5453 12.8567 87.0053 11.83C85.4653 10.8033 84.6953 9.19333 84.6953 7C84.6953 4.85333 85.442 3.26666 86.9353 2.24C88.4286 1.21333 90.2253 0.583329 92.3253 0.349996C94.4253 0.116663 97.132 -3.33786e-06 100.445 -3.33786e-06C103.759 -3.33786e-06 106.465 0.116663 108.565 0.349996C110.665 0.583329 112.462 1.21333 113.955 2.24C115.495 3.26666 116.265 4.85333 116.265 7C116.265 9.19333 115.472 10.8033 113.885 11.83C112.345 12.8567 110.199 13.51 107.445 13.79C107.679 16.3567 107.795 19.9967 107.795 24.71C107.795 29.2367 107.655 33.11 107.375 36.33ZM168.4 31.64C169.1 32.5267 170.22 34.1833 171.76 36.61C173.58 39.5033 174.49 41.9533 174.49 43.96C174.49 45.5933 173.953 46.83 172.88 47.67C171.807 48.4633 170.547 48.86 169.1 48.86C167.747 48.86 166.37 48.3 164.97 47.18C163.617 46.06 162.193 44.5433 160.7 42.63C159.113 40.53 158.063 39.0367 157.55 38.15C156.943 38.3833 156.267 38.6167 155.52 38.85C155.193 42.35 154.54 44.8933 153.56 46.48C152.58 48.0667 151.087 48.86 149.08 48.86C147.027 48.86 145.393 48.02 144.18 46.34C142.967 44.66 142.08 42.0467 141.52 38.5C141.007 34.9533 140.75 30.2633 140.75 24.43C140.75 18.8767 140.913 14.42 141.24 11.06C141.613 7.65333 142.407 4.97 143.62 3.01C144.833 1.00333 146.653 -3.33786e-06 149.08 -3.33786e-06C151.087 -3.33786e-06 152.58 0.699997 153.56 2.1C154.587 3.5 155.24 5.43666 155.52 7.91C155.847 10.3367 156.01 13.6033 156.01 17.71V22.12L156.22 21.98C158.927 20.16 161.307 18.7367 163.36 17.71C165.46 16.6833 167.35 16.17 169.03 16.17C170.943 16.17 172.437 16.8233 173.51 18.13C174.63 19.39 175.19 20.8133 175.19 22.4C175.19 24.08 174.63 25.62 173.51 27.02C172.39 28.42 170.687 29.96 168.4 31.64ZM204.972 49C203.292 49 202.032 48.5333 201.192 47.6C200.399 46.6667 199.909 45.5233 199.722 44.17C199.536 42.8167 199.442 41.0667 199.442 38.92C199.442 36.1667 199.069 34.0433 198.322 32.55C197.576 31.0567 196.362 30.31 194.682 30.31C193.142 30.31 191.976 31.0567 191.182 32.55C190.436 33.9967 190.062 36.0033 190.062 38.57C190.062 41.0433 189.992 42.91 189.852 44.17C189.712 45.43 189.246 46.55 188.452 47.53C187.659 48.4633 186.352 48.93 184.532 48.93C181.872 48.93 180.006 47.2267 178.932 43.82C177.859 40.3667 177.322 36.33 177.322 31.71C177.322 20.51 179.679 14.91 184.392 14.91C185.699 14.91 186.772 15.2367 187.612 15.89C188.452 16.4967 189.036 17.3833 189.362 18.55C189.969 17.8967 190.902 17.3133 192.162 16.8C193.469 16.2867 194.846 16.03 196.292 16.03C201.426 16.03 205.252 17.8967 207.772 21.63C210.339 25.3633 211.622 30.4267 211.622 36.82C211.622 40.6 211.132 43.5867 210.152 45.78C209.172 47.9267 207.446 49 204.972 49ZM231.258 49.07C227.898 49.1167 224.888 48.4167 222.228 46.97C219.614 45.5233 217.561 43.54 216.068 41.02C214.621 38.4533 213.851 35.6067 213.758 32.48C213.711 29.3533 214.434 26.5533 215.928 24.08C217.421 21.6067 219.498 19.6467 222.158 18.2C224.864 16.7533 227.898 16.03 231.258 16.03C234.524 16.03 237.464 16.73 240.078 18.13C242.738 19.53 244.838 21.49 246.378 24.01C247.918 26.53 248.734 29.3533 248.828 32.48C248.874 35.5133 248.151 38.29 246.658 40.81C245.164 43.2833 243.064 45.2667 240.358 46.76C237.698 48.2533 234.664 49.0233 231.258 49.07ZM231.468 38.85C232.728 38.85 233.824 38.36 234.758 37.38C235.691 36.4 236.158 35.2567 236.158 33.95C236.158 32.6433 235.691 31.5233 234.758 30.59C233.824 29.61 232.728 29.12 231.468 29.12C230.208 29.12 229.111 29.61 228.178 30.59C227.244 31.5233 226.778 32.6433 226.778 33.95C226.778 35.2567 227.244 36.4 228.178 37.38C229.111 38.36 230.208 38.85 231.468 38.85ZM264.385 49.07C261.679 49.07 259.299 48.37 257.245 46.97C255.239 45.5233 253.675 43.4933 252.555 40.88C251.482 38.2667 250.945 35.2567 250.945 31.85C250.945 29.3767 251.225 26.9267 251.785 24.5C252.345 22.0733 253.232 20.0667 254.445 18.48C255.705 16.8467 257.269 16.03 259.135 16.03C260.862 16.03 262.192 16.59 263.125 17.71C264.059 18.83 264.525 20.3467 264.525 22.26C264.525 23.2867 264.269 24.78 263.755 26.74C263.709 27.02 263.569 27.72 263.335 28.84C263.102 29.9133 262.985 30.87 262.985 31.71C262.985 33.3433 263.149 34.51 263.475 35.21C263.802 35.8633 264.479 36.19 265.505 36.19C266.579 36.19 267.302 35.6067 267.675 34.44C268.049 33.2267 268.235 31.4767 268.235 29.19L268.165 23.94C268.165 22.3067 268.585 20.93 269.425 19.81C270.312 18.69 271.642 18.13 273.415 18.13C275.189 18.13 276.542 18.7133 277.475 19.88C278.409 21 278.875 22.3533 278.875 23.94L278.805 27.23C278.759 27.93 278.735 28.9333 278.735 30.24C278.735 32.2 278.922 33.6933 279.295 34.72C279.715 35.7 280.485 36.19 281.605 36.19C283.799 36.19 284.895 34.6967 284.895 31.71C284.895 30.7767 284.522 29.1433 283.775 26.81C283.729 26.5767 283.542 25.9233 283.215 24.85C282.889 23.7767 282.725 22.8667 282.725 22.12C282.725 20.1133 283.122 18.62 283.915 17.64C284.755 16.6133 286.039 16.1 287.765 16.1C289.632 16.1 291.172 16.9167 292.385 18.55C293.645 20.1367 294.555 22.1433 295.115 24.57C295.675 26.95 295.955 29.3533 295.955 31.78C295.955 36.96 294.742 41.1133 292.315 44.24C289.889 47.32 286.622 48.86 282.515 48.86C280.649 48.86 278.922 48.51 277.335 47.81C275.749 47.11 274.442 46.1533 273.415 44.94C272.342 46.2 271.012 47.2033 269.425 47.95C267.885 48.6967 266.205 49.07 264.385 49.07ZM354.627 18.69C354.627 21.1167 353.483 22.7733 351.197 23.66C348.91 24.5 345.783 24.9433 341.817 24.99C341.77 26.1567 341.747 28.0467 341.747 30.66C341.747 33.32 341.933 35.21 342.307 36.33C342.54 37.1233 342.89 37.6367 343.357 37.87C343.87 38.1033 344.617 38.2667 345.597 38.36C345.923 38.4067 346.273 38.4767 346.647 38.57C347.067 38.6167 347.533 38.6867 348.047 38.78C349.12 39.0133 349.96 39.5967 350.567 40.53C351.173 41.4167 351.477 42.56 351.477 43.96C351.477 45.5467 350.66 46.7833 349.027 47.67C347.393 48.5567 345.153 49 342.307 49C339.693 49 337.197 48.2533 334.817 46.76C332.437 45.22 330.803 43.1667 329.917 40.6C328.983 37.8467 328.517 32.6433 328.517 24.99C325.25 24.8967 322.613 24.4767 320.607 23.73C318.647 22.9367 317.667 21.5367 317.667 19.53C317.667 17.01 318.6 15.33 320.467 14.49C322.333 13.6033 325.017 13.1367 328.517 13.09C328.657 9.35666 329.24 6.25333 330.267 3.78C331.293 1.26 333.137 -3.33786e-06 335.797 -3.33786e-06C338.503 -3.33786e-06 340.253 1.16666 341.047 3.5C341.887 5.83333 342.26 9.03 342.167 13.09C346.413 13.0433 349.54 13.37 351.547 14.07C353.6 14.77 354.627 16.31 354.627 18.69ZM366.533 49C364.246 49 362.496 48.1133 361.283 46.34C360.069 44.5667 359.229 41.8367 358.763 38.15C358.343 34.4633 358.133 29.3533 358.133 22.82C358.133 17.36 358.273 13.09 358.553 10.01C358.879 6.93 359.603 4.50333 360.723 2.73C361.843 0.909997 363.593 -3.33786e-06 365.973 -3.33786e-06C368.026 -3.33786e-06 369.566 0.65333 370.593 1.96C371.619 3.26666 372.273 4.9 372.553 6.86C372.833 8.82 372.973 11.27 372.973 14.21V17.36C373.906 16.8933 374.723 16.5667 375.423 16.38C376.169 16.1933 377.266 16.1 378.713 16.1C381.886 16.1 384.616 16.9167 386.903 18.55C389.189 20.1367 390.916 22.2833 392.083 24.99C393.296 27.6967 393.903 30.7067 393.903 34.02C393.903 38.3133 393.436 41.86 392.503 44.66C391.616 47.4133 389.843 48.79 387.183 48.79C385.316 48.79 383.916 48.37 382.983 47.53C382.096 46.69 381.513 45.5467 381.233 44.1C380.999 42.6533 380.883 40.67 380.883 38.15C380.883 35.3967 380.579 33.2733 379.973 31.78C379.413 30.2867 378.409 29.54 376.963 29.54C375.516 29.54 374.466 30.31 373.813 31.85C373.206 33.3433 372.879 35.4433 372.833 38.15C372.786 40.67 372.623 42.6767 372.343 44.17C372.109 45.6633 371.526 46.8533 370.593 47.74C369.706 48.58 368.353 49 366.533 49ZM408.604 49C404.964 49 401.977 48.1833 399.644 46.55C397.311 44.87 396.144 42.4667 396.144 39.34C396.144 36.6333 397.334 34.4867 399.714 32.9C402.094 31.3133 405.057 30.52 408.604 30.52C409.911 30.52 411.124 30.6367 412.244 30.87C413.411 31.0567 414.204 31.29 414.624 31.57C414.624 30.4033 414.134 29.4467 413.154 28.7C412.174 27.9067 410.681 27.51 408.674 27.51C407.787 27.51 407.064 27.58 406.504 27.72C405.944 27.86 405.337 28.07 404.684 28.35C404.031 28.63 403.424 28.84 402.864 28.98C402.351 29.12 401.651 29.19 400.764 29.19C399.271 29.19 398.104 28.8167 397.264 28.07C396.424 27.2767 396.004 26.0867 396.004 24.5C396.004 22.68 396.657 21.14 397.964 19.88C399.317 18.62 400.997 17.6867 403.004 17.08C405.011 16.4267 407.017 16.1 409.024 16.1C412.991 16.1 416.304 16.8467 418.964 18.34C421.671 19.7867 423.654 21.7233 424.914 24.15C426.221 26.5767 426.874 29.26 426.874 32.2C426.874 33.7867 426.734 35.2567 426.454 36.61C426.221 37.9633 425.894 39.0133 425.474 39.76C426.127 40.32 426.617 40.9733 426.944 41.72C427.317 42.4667 427.504 43.2367 427.504 44.03C427.504 45.3833 427.037 46.55 426.104 47.53C425.217 48.51 424.027 49 422.534 49C421.414 49 420.504 48.8367 419.804 48.51C419.104 48.1833 418.357 47.67 417.564 46.97C416.397 47.67 415.114 48.1833 413.714 48.51C412.361 48.8367 410.657 49 408.604 49ZM410.004 41.93C410.984 41.93 411.754 41.72 412.314 41.3C412.921 40.88 413.224 40.3667 413.224 39.76C413.224 39.1533 412.921 38.64 412.314 38.22C411.754 37.8 410.984 37.59 410.004 37.59C409.024 37.59 408.231 37.8 407.624 38.22C407.064 38.64 406.784 39.1533 406.784 39.76C406.784 40.3667 407.064 40.88 407.624 41.3C408.231 41.72 409.024 41.93 410.004 41.93ZM462.361 18.69C462.361 21.1167 461.218 22.7733 458.931 23.66C456.645 24.5 453.518 24.9433 449.551 24.99C449.505 26.1567 449.481 28.0467 449.481 30.66C449.481 33.32 449.668 35.21 450.041 36.33C450.275 37.1233 450.625 37.6367 451.091 37.87C451.605 38.1033 452.351 38.2667 453.331 38.36C453.658 38.4067 454.008 38.4767 454.381 38.57C454.801 38.6167 455.268 38.6867 455.781 38.78C456.855 39.0133 457.695 39.5967 458.301 40.53C458.908 41.4167 459.211 42.56 459.211 43.96C459.211 45.5467 458.395 46.7833 456.761 47.67C455.128 48.5567 452.888 49 450.041 49C447.428 49 444.931 48.2533 442.551 46.76C440.171 45.22 438.538 43.1667 437.651 40.6C436.718 37.8467 436.251 32.6433 436.251 24.99C432.985 24.8967 430.348 24.4767 428.341 23.73C426.381 22.9367 425.401 21.5367 425.401 19.53C425.401 17.01 426.335 15.33 428.201 14.49C430.068 13.6033 432.751 13.1367 436.251 13.09C436.391 9.35666 436.975 6.25333 438.001 3.78C439.028 1.26 440.871 -3.33786e-06 443.531 -3.33786e-06C446.238 -3.33786e-06 447.988 1.16666 448.781 3.5C449.621 5.83333 449.995 9.03 449.901 13.09C454.148 13.0433 457.275 13.37 459.281 14.07C461.335 14.77 462.361 16.31 462.361 18.69ZM23.43 106.33C25.81 106.61 27.6533 107.217 28.96 108.15C30.3133 109.037 30.99 110.46 30.99 112.42C30.99 114.38 30.29 115.827 28.89 116.76C27.5367 117.693 25.9033 118.277 23.99 118.51C22.0767 118.697 19.6033 118.79 16.57 118.79C13.5833 118.79 11.1333 118.697 9.22 118.51C7.30667 118.277 5.67333 117.693 4.32 116.76C2.96667 115.827 2.29 114.38 2.29 112.42C2.29 110.507 2.92 109.107 4.18 108.22C5.48667 107.287 7.26 106.657 9.5 106.33C9.26667 103.623 9.15 99.75 9.15 94.71C9.15 90.1833 9.24333 86.5433 9.43 83.79C6.72333 83.51 4.6 82.8567 3.06 81.83C1.52 80.8033 0.75 79.1933 0.75 77C0.75 74.8533 1.49667 73.2667 2.99 72.24C4.48333 71.2133 6.28 70.5833 8.38 70.35C10.48 70.1167 13.1867 70 16.5 70C19.8133 70 22.52 70.1167 24.62 70.35C26.72 70.5833 28.5167 71.2133 30.01 72.24C31.55 73.2667 32.32 74.8533 32.32 77C32.32 79.1933 31.5267 80.8033 29.94 81.83C28.4 82.8567 26.2533 83.51 23.5 83.79C23.7333 86.3567 23.85 89.9967 23.85 94.71C23.85 99.2367 23.71 103.11 23.43 106.33ZM73.4647 119C70.1514 119 67.2114 118.207 64.6447 116.62C62.1247 114.987 60.188 112.887 58.8347 110.32C57.4814 107.707 56.8047 104.93 56.8047 101.99C56.8047 98.5367 57.5047 95.62 58.9047 93.24C60.3514 90.8133 62.1947 89.0167 64.4347 87.85C66.7214 86.6833 69.1714 86.1 71.7847 86.1C74.398 86.1 76.7314 86.66 78.7847 87.78C78.6914 86.8 78.5047 85.75 78.2247 84.63C77.9914 83.51 77.828 82.81 77.7347 82.53C77.3614 81.0833 77.0814 79.87 76.8947 78.89C76.708 77.91 76.6147 76.93 76.6147 75.95C76.6147 73.99 77.198 72.4967 78.3647 71.47C79.5314 70.4433 80.9314 69.93 82.5647 69.93C85.178 69.93 87.3014 71.2367 88.9347 73.85C90.568 76.4633 91.7347 79.7067 92.4347 83.58C93.1814 87.4533 93.5547 91.3733 93.5547 95.34C93.5547 100.707 92.318 106.003 89.8447 111.23C87.418 116.41 81.958 119 73.4647 119ZM73.8847 107.94C75.1447 107.94 76.2414 107.473 77.1747 106.54C78.108 105.56 78.5747 104.417 78.5747 103.11C78.5747 101.803 78.108 100.66 77.1747 99.68C76.2414 98.7 75.1447 98.21 73.8847 98.21C72.6247 98.21 71.5047 98.7 70.5247 99.68C69.5914 100.66 69.1247 101.803 69.1247 103.11C69.1247 104.417 69.5914 105.56 70.5247 106.54C71.5047 107.473 72.6247 107.94 73.8847 107.94ZM113.201 119.07C109.841 119.117 106.831 118.417 104.171 116.97C101.558 115.523 99.5045 113.54 98.0112 111.02C96.5645 108.453 95.7945 105.607 95.7012 102.48C95.6545 99.3533 96.3778 96.5533 97.8712 94.08C99.3645 91.6067 101.441 89.6467 104.101 88.2C106.808 86.7533 109.841 86.03 113.201 86.03C116.468 86.03 119.408 86.73 122.021 88.13C124.681 89.53 126.781 91.49 128.321 94.01C129.861 96.53 130.678 99.3533 130.771 102.48C130.818 105.513 130.095 108.29 128.601 110.81C127.108 113.283 125.008 115.267 122.301 116.76C119.641 118.253 116.608 119.023 113.201 119.07ZM113.411 108.85C114.671 108.85 115.768 108.36 116.701 107.38C117.635 106.4 118.101 105.257 118.101 103.95C118.101 102.643 117.635 101.523 116.701 100.59C115.768 99.61 114.671 99.12 113.411 99.12C112.151 99.12 111.055 99.61 110.121 100.59C109.188 101.523 108.721 102.643 108.721 103.95C108.721 105.257 109.188 106.4 110.121 107.38C111.055 108.36 112.151 108.85 113.411 108.85ZM160.539 119C158.859 119 157.599 118.533 156.759 117.6C155.965 116.667 155.475 115.523 155.289 114.17C155.102 112.817 155.009 111.067 155.009 108.92C155.009 106.167 154.635 104.043 153.889 102.55C153.142 101.057 151.929 100.31 150.249 100.31C148.709 100.31 147.542 101.057 146.749 102.55C146.002 103.997 145.629 106.003 145.629 108.57C145.629 111.043 145.559 112.91 145.419 114.17C145.279 115.43 144.812 116.55 144.019 117.53C143.225 118.463 141.919 118.93 140.099 118.93C137.439 118.93 135.572 117.227 134.499 113.82C133.425 110.367 132.889 106.33 132.889 101.71C132.889 90.51 135.245 84.91 139.959 84.91C141.265 84.91 142.339 85.2367 143.179 85.89C144.019 86.4967 144.602 87.3833 144.929 88.55C145.535 87.8967 146.469 87.3133 147.729 86.8C149.035 86.2867 150.412 86.03 151.859 86.03C156.992 86.03 160.819 87.8967 163.339 91.63C165.905 95.3633 167.189 100.427 167.189 106.82C167.189 110.6 166.699 113.587 165.719 115.78C164.739 117.927 163.012 119 160.539 119ZM180.561 86.94C179.115 86.94 178.041 86.5433 177.341 85.75C176.688 84.91 176.291 83.8833 176.151 82.67C176.011 81.41 175.941 79.73 175.941 77.63C175.941 75.53 176.011 73.8733 176.151 72.66C176.291 71.4467 176.688 70.4433 177.341 69.65C178.041 68.81 179.115 68.39 180.561 68.39C182.008 68.39 183.058 68.81 183.711 69.65C184.411 70.4433 184.831 71.4467 184.971 72.66C185.111 73.8733 185.181 75.53 185.181 77.63C185.181 79.73 185.111 81.41 184.971 82.67C184.831 83.8833 184.411 84.91 183.711 85.75C183.058 86.5433 182.008 86.94 180.561 86.94ZM228.094 88.69C228.094 91.1167 226.95 92.7733 224.664 93.66C222.377 94.5 219.25 94.9433 215.284 94.99C215.237 96.1567 215.214 98.0467 215.214 100.66C215.214 103.32 215.4 105.21 215.774 106.33C216.007 107.123 216.357 107.637 216.824 107.87C217.337 108.103 218.084 108.267 219.064 108.36C219.39 108.407 219.74 108.477 220.114 108.57C220.534 108.617 221 108.687 221.514 108.78C222.587 109.013 223.427 109.597 224.034 110.53C224.64 111.417 224.944 112.56 224.944 113.96C224.944 115.547 224.127 116.783 222.494 117.67C220.86 118.557 218.62 119 215.774 119C213.16 119 210.664 118.253 208.284 116.76C205.904 115.22 204.27 113.167 203.384 110.6C202.45 107.847 201.984 102.643 201.984 94.99C198.717 94.8967 196.08 94.4767 194.074 93.73C192.114 92.9367 191.134 91.5367 191.134 89.53C191.134 87.01 192.067 85.33 193.934 84.49C195.8 83.6033 198.484 83.1367 201.984 83.09C202.124 79.3567 202.707 76.2533 203.734 73.78C204.76 71.26 206.604 70 209.264 70C211.97 70 213.72 71.1667 214.514 73.5C215.354 75.8333 215.727 79.03 215.634 83.09C219.88 83.0433 223.007 83.37 225.014 84.07C227.067 84.77 228.094 86.31 228.094 88.69ZM280.236 101.64C280.936 102.527 282.056 104.183 283.596 106.61C285.416 109.503 286.326 111.953 286.326 113.96C286.326 115.593 285.789 116.83 284.716 117.67C283.643 118.463 282.383 118.86 280.936 118.86C279.583 118.86 278.206 118.3 276.806 117.18C275.453 116.06 274.029 114.543 272.536 112.63C270.949 110.53 269.899 109.037 269.386 108.15C268.779 108.383 268.103 108.617 267.356 108.85C267.029 112.35 266.376 114.893 265.396 116.48C264.416 118.067 262.923 118.86 260.916 118.86C258.863 118.86 257.229 118.02 256.016 116.34C254.803 114.66 253.916 112.047 253.356 108.5C252.843 104.953 252.586 100.263 252.586 94.43C252.586 88.8767 252.749 84.42 253.076 81.06C253.449 77.6533 254.243 74.97 255.456 73.01C256.669 71.0033 258.489 70 260.916 70C262.923 70 264.416 70.7 265.396 72.1C266.423 73.5 267.076 75.4367 267.356 77.91C267.683 80.3367 267.846 83.6033 267.846 87.71V92.12L268.056 91.98C270.763 90.16 273.143 88.7367 275.196 87.71C277.296 86.6833 279.186 86.17 280.866 86.17C282.779 86.17 284.273 86.8233 285.346 88.13C286.466 89.39 287.026 90.8133 287.026 92.4C287.026 94.08 286.466 95.62 285.346 97.02C284.226 98.42 282.523 99.96 280.236 101.64ZM316.808 119C315.128 119 313.868 118.533 313.028 117.6C312.235 116.667 311.745 115.523 311.558 114.17C311.372 112.817 311.278 111.067 311.278 108.92C311.278 106.167 310.905 104.043 310.158 102.55C309.412 101.057 308.198 100.31 306.518 100.31C304.978 100.31 303.812 101.057 303.018 102.55C302.272 103.997 301.898 106.003 301.898 108.57C301.898 111.043 301.828 112.91 301.688 114.17C301.548 115.43 301.082 116.55 300.288 117.53C299.495 118.463 298.188 118.93 296.368 118.93C293.708 118.93 291.842 117.227 290.768 113.82C289.695 110.367 289.158 106.33 289.158 101.71C289.158 90.51 291.515 84.91 296.228 84.91C297.535 84.91 298.608 85.2367 299.448 85.89C300.288 86.4967 300.872 87.3833 301.198 88.55C301.805 87.8967 302.738 87.3133 303.998 86.8C305.305 86.2867 306.682 86.03 308.128 86.03C313.262 86.03 317.088 87.8967 319.608 91.63C322.175 95.3633 323.458 100.427 323.458 106.82C323.458 110.6 322.968 113.587 321.988 115.78C321.008 117.927 319.282 119 316.808 119ZM343.094 119.07C339.734 119.117 336.724 118.417 334.064 116.97C331.45 115.523 329.397 113.54 327.904 111.02C326.457 108.453 325.687 105.607 325.594 102.48C325.547 99.3533 326.27 96.5533 327.764 94.08C329.257 91.6067 331.334 89.6467 333.994 88.2C336.7 86.7533 339.734 86.03 343.094 86.03C346.36 86.03 349.3 86.73 351.914 88.13C354.574 89.53 356.674 91.49 358.214 94.01C359.754 96.53 360.57 99.3533 360.664 102.48C360.71 105.513 359.987 108.29 358.494 110.81C357 113.283 354.9 115.267 352.194 116.76C349.534 118.253 346.5 119.023 343.094 119.07ZM343.304 108.85C344.564 108.85 345.66 108.36 346.594 107.38C347.527 106.4 347.994 105.257 347.994 103.95C347.994 102.643 347.527 101.523 346.594 100.59C345.66 99.61 344.564 99.12 343.304 99.12C342.044 99.12 340.947 99.61 340.014 100.59C339.08 101.523 338.614 102.643 338.614 103.95C338.614 105.257 339.08 106.4 340.014 107.38C340.947 108.36 342.044 108.85 343.304 108.85ZM376.221 119.07C373.515 119.07 371.135 118.37 369.081 116.97C367.075 115.523 365.511 113.493 364.391 110.88C363.318 108.267 362.781 105.257 362.781 101.85C362.781 99.3767 363.061 96.9267 363.621 94.5C364.181 92.0733 365.068 90.0667 366.281 88.48C367.541 86.8467 369.105 86.03 370.971 86.03C372.698 86.03 374.028 86.59 374.961 87.71C375.895 88.83 376.361 90.3467 376.361 92.26C376.361 93.2867 376.105 94.78 375.591 96.74C375.545 97.02 375.405 97.72 375.171 98.84C374.938 99.9133 374.821 100.87 374.821 101.71C374.821 103.343 374.985 104.51 375.311 105.21C375.638 105.863 376.315 106.19 377.341 106.19C378.415 106.19 379.138 105.607 379.511 104.44C379.885 103.227 380.071 101.477 380.071 99.19L380.001 93.94C380.001 92.3067 380.421 90.93 381.261 89.81C382.148 88.69 383.478 88.13 385.251 88.13C387.025 88.13 388.378 88.7133 389.311 89.88C390.245 91 390.711 92.3533 390.711 93.94L390.641 97.23C390.595 97.93 390.571 98.9333 390.571 100.24C390.571 102.2 390.758 103.693 391.131 104.72C391.551 105.7 392.321 106.19 393.441 106.19C395.635 106.19 396.731 104.697 396.731 101.71C396.731 100.777 396.358 99.1433 395.611 96.81C395.565 96.5767 395.378 95.9233 395.051 94.85C394.725 93.7767 394.561 92.8667 394.561 92.12C394.561 90.1133 394.958 88.62 395.751 87.64C396.591 86.6133 397.875 86.1 399.601 86.1C401.468 86.1 403.008 86.9167 404.221 88.55C405.481 90.1367 406.391 92.1433 406.951 94.57C407.511 96.95 407.791 99.3533 407.791 101.78C407.791 106.96 406.578 111.113 404.151 114.24C401.725 117.32 398.458 118.86 394.351 118.86C392.485 118.86 390.758 118.51 389.171 117.81C387.585 117.11 386.278 116.153 385.251 114.94C384.178 116.2 382.848 117.203 381.261 117.95C379.721 118.697 378.041 119.07 376.221 119.07ZM444.553 106.12C441.006 106.12 438.253 105.817 436.293 105.21C434.333 104.557 433.353 103.11 433.353 100.87C433.353 98.5833 434.379 97.1367 436.433 96.53C438.486 95.8767 441.333 95.55 444.973 95.55H448.193C451.553 95.55 454.189 95.9 456.103 96.6C458.063 97.2533 459.043 98.6767 459.043 100.87C459.043 103.017 458.086 104.44 456.173 105.14C454.306 105.84 451.786 106.19 448.613 106.19L444.553 106.12ZM515.958 129.01C514.184 129.01 512.878 128.473 512.038 127.4C511.244 126.373 510.754 125.043 510.568 123.41C510.381 121.777 510.288 119.467 510.288 116.48C509.168 117.32 507.814 117.997 506.228 118.51C504.641 118.977 502.938 119.21 501.118 119.21C498.131 119.21 495.378 118.463 492.858 116.97C490.338 115.477 488.331 113.47 486.838 110.95C485.344 108.383 484.598 105.607 484.598 102.62C484.598 99.6333 485.344 96.88 486.838 94.36C488.331 91.84 490.338 89.8333 492.858 88.34C495.378 86.8467 498.131 86.1 501.118 86.1C502.891 86.1 504.571 86.3567 506.158 86.87C507.791 87.3367 509.144 87.9667 510.218 88.76C511.291 86.8933 513.018 85.96 515.398 85.96C517.871 85.96 519.668 87.15 520.788 89.53C521.908 91.8633 522.561 94.4533 522.748 97.3C522.981 100.147 523.098 103.74 523.098 108.08C523.098 112.187 522.958 115.687 522.678 118.58C522.444 121.427 521.791 123.877 520.718 125.93C519.691 127.983 518.104 129.01 515.958 129.01ZM501.468 107.59C502.681 107.59 503.731 107.147 504.618 106.26C505.551 105.327 506.018 104.253 506.018 103.04C506.018 101.827 505.551 100.777 504.618 99.89C503.731 98.9567 502.681 98.49 501.468 98.49C500.254 98.49 499.181 98.9567 498.248 99.89C497.361 100.777 496.918 101.827 496.918 103.04C496.918 104.253 497.361 105.327 498.248 106.26C499.181 107.147 500.254 107.59 501.468 107.59ZM542.143 119C538.736 119 535.75 118.16 533.183 116.48C530.616 114.753 528.633 112.373 527.233 109.34C525.88 106.26 525.203 102.713 525.203 98.7C525.203 94.78 525.833 91.7 527.093 89.46C528.353 87.22 530.103 86.1 532.343 86.1C536.31 86.1 538.293 88.13 538.293 92.19C538.293 93.03 538.27 93.7767 538.223 94.43C538.176 95.0367 538.13 95.5733 538.083 96.04C537.896 97.9067 537.803 99.4 537.803 100.52C537.803 102.573 538.223 104.137 539.063 105.21C539.903 106.283 540.93 106.82 542.143 106.82C543.403 106.82 544.43 106.307 545.223 105.28C546.063 104.207 546.483 102.62 546.483 100.52C546.483 99.0267 546.413 97.65 546.273 96.39C546.226 95.97 546.18 95.3633 546.133 94.57C546.086 93.73 546.063 92.96 546.063 92.26C546.063 88.1533 548.046 86.1 552.013 86.1C554.253 86.1 555.98 87.22 557.193 89.46C558.453 91.6533 559.083 94.7333 559.083 98.7C559.083 104.907 557.636 109.853 554.743 113.54C551.85 117.18 547.65 119 542.143 119ZM568.872 85.05C566.585 85.05 564.648 84.2333 563.062 82.6C561.475 80.92 560.682 78.89 560.682 76.51C560.682 74.1767 561.475 72.1933 563.062 70.56C564.648 68.88 566.585 68.04 568.872 68.04C571.112 68.04 573.025 68.88 574.612 70.56C576.245 72.1933 577.062 74.1767 577.062 76.51C577.062 78.89 576.245 80.92 574.612 82.6C573.025 84.2333 571.112 85.05 568.872 85.05ZM568.872 119C566.958 119 565.535 118.463 564.602 117.39C563.715 116.27 563.108 114.613 562.782 112.42C562.502 110.18 562.362 107.007 562.362 102.9C562.362 99.4467 562.525 96.7167 562.852 94.71C563.225 92.7033 563.878 91.21 564.812 90.23C565.745 89.25 567.098 88.76 568.872 88.76C570.785 88.76 572.185 89.32 573.072 90.44C574.005 91.5133 574.612 93.17 574.892 95.41C575.218 97.6033 575.382 100.753 575.382 104.86C575.382 108.313 575.195 111.043 574.822 113.05C574.495 115.057 573.865 116.55 572.932 117.53C571.998 118.51 570.645 119 568.872 119ZM596.114 118.93C592.661 118.93 589.931 118.767 587.924 118.44C585.964 118.067 584.424 117.343 583.304 116.27C582.231 115.15 581.694 113.47 581.694 111.23C581.694 109.317 582.628 107.473 584.494 105.7C586.361 103.927 589.348 101.593 593.454 98.7C590.094 98.7 587.574 98.6067 585.894 98.42C584.261 98.2333 582.954 97.72 581.974 96.88C581.041 95.9933 580.574 94.57 580.574 92.61C580.574 90.23 581.811 88.55 584.284 87.57C586.804 86.59 590.561 86.1 595.554 86.1C600.781 86.1 604.631 86.7067 607.104 87.92C609.578 89.0867 610.814 91.28 610.814 94.5C610.814 97.0667 609.671 99.5167 607.384 101.85C605.144 104.183 602.438 106.143 599.264 107.73C601.878 107.73 603.954 107.847 605.494 108.08C607.034 108.267 608.248 108.757 609.134 109.55C610.068 110.297 610.534 111.44 610.534 112.98C610.534 115.407 609.368 117.017 607.034 117.81C604.748 118.557 601.108 118.93 596.114 118.93Z \",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTitle);\nexport default __webpack_public_path__ + \"static/media/title.79db2a64.svg\";\nexport { ForwardRef as ReactComponent };","export const categoriesType = {\r\n  CATEGORIES_LOAD: 'CATEGORIES_LOAD',\r\n  CATEGORIES_LOAD_ERRORS: 'CATEGORIES_LOAD_ERRORS',\r\n};\r\nexport const optionsTypes = {\r\n  CHANGE_NAME: 'CHANGE_NAME',\r\n  CHANGE_CATEGORY: 'CHANGE_CATEGORY',\r\n  CHANGE_DIFFICULTY: 'CHANGE_DIFFICULTY',\r\n  CHANGE_TYPE: 'CHANGE_TYPE',\r\n  CHANGE_AMOUNT: 'CHANGE_AMOUNT',\r\n  CLEAR_OPTIONS: 'CLEAR_OPTIONS',\r\n};\r\n\r\nexport const questionsTypes = {\r\n  QUESTIONS_LOAD: 'QUESTIONS_LOAD',\r\n  QUESTIONS_LOAD_ERRORS: 'QUESTIONS_LOAD_ERRORS',\r\n};\r\nexport const scoreAndIndexTypes = {\r\n  SET_INDEX: 'SET_INDEX',\r\n  SET_SCORE: 'SET_SCORE',\r\n  CLEAR_SCORE_AND_INDEX: 'CLEAR_SCORE_AND_INDEX',\r\n};\r\nexport const helpersTypes = {\r\n  SET_MARKED_ANSWER: 'SET_MARKED_ANSWER',\r\n  SET_ANSWER_SELECTED: 'SET_ANSWER_SELECTED',\r\n};\r\nexport const rankTypes = {\r\n  ADD_TO_RANK: 'ADD_TO_RANK',\r\n};\r\n","import { categoriesType, questionsTypes, rankTypes } from './actionTypes';\r\n\r\nconst categoriesLoad = (categories) => ({\r\n  type: categoriesType.CATEGORIES_LOAD,\r\n  payload: categories,\r\n});\r\n\r\nconst categoriesLoadErrors = (errorMessage) => ({\r\n  type: categoriesType.CATEGORIES_LOAD_ERRORS,\r\n  payload: errorMessage,\r\n});\r\n\r\nconst questionsLoad = (questions) => ({\r\n  type: questionsTypes.QUESTIONS_LOAD,\r\n  payload: questions,\r\n});\r\nconst questionsLoadErrors = (errorMessage) => ({\r\n  type: questionsTypes.QUESTIONS_LOAD_ERRORS,\r\n  payload: errorMessage,\r\n});\r\nconst addToRank = (name, amount, score) => ({\r\n  type: rankTypes.ADD_TO_RANK,\r\n  name,\r\n  amount,\r\n  score,\r\n});\r\nconst Actions = {\r\n  categoriesLoad,\r\n  categoriesLoadErrors,\r\n  questionsLoad,\r\n  questionsLoadErrors,\r\n  addToRank,\r\n};\r\n\r\nexport default Actions;\r\n","import axios from 'axios';\r\n\r\nconst apiClient = () => {\r\n  const { REACT_APP_API_URL } = process.env;\r\n\r\n  return axios.create({\r\n    baseURL: REACT_APP_API_URL,\r\n    responseType: 'json',\r\n  });\r\n};\r\nexport default apiClient;\r\n","import apiClient from '../helpers/apiClient';\r\n\r\nclass UserService {\r\n  getAllCategories = () => apiClient().get('/api_category.php');\r\n  getAllQuestions = (category, difficulty, type, amount) =>\r\n    apiClient().get('/api.php', {\r\n      params: {\r\n        amount,\r\n        category,\r\n        difficulty,\r\n        type,\r\n      },\r\n    });\r\n}\r\nexport default new UserService();\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  loadCategoriesAsync,\r\n  loadQuestionsAsync,\r\n} from '../redux/reducers/thunk';\r\nimport { optionsTypes } from '../redux/reducers/actionTypes';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst StyledLabel = styled.label`\r\n  position: relative;\r\n  color: #fff;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  letter-spacing: 1px;\r\n  margin-top: 5px;\r\n  margin-bottom: 10px;\r\n  text-shadow: 1px 2px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  width: 80%;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  outline: none;\r\n  padding: 10px 20px;\r\n  border-radius: 35px;\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  font-size: 1.2rem;\r\n  letter-spacing: 1px;\r\n  color: #fff;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0, 05);\r\n  text-shadow: 1px 1px rgba(0, 0, 0, 0.2);\r\n  :hover {\r\n    background: rgba(255, 255, 255, 0.3);\r\n  }\r\n`;\r\nconst StyledSelect = styled.select`\r\n  width: 80%;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  outline: none;\r\n  padding: 10px 20px;\r\n  border-radius: 35px;\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  font-size: 1rem;\r\n  letter-spacing: 1px;\r\n  color: #fff;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0, 05);\r\n  text-shadow: 1px 1px rgba(0, 0, 0, 0.2);\r\n  :hover {\r\n    background: rgba(255, 255, 255, 0.3);\r\n  }\r\n`;\r\n\r\nconst StyledForm = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledOption = styled.option`\r\n  color: black;\r\n  font-size: 0.8rem;\r\n  background: rgba(255, 255, 255, 0.2);\r\n`;\r\nconst StyledButton = styled.button`\r\n  display: flex;\r\n  position: relative;\r\n  width: 80%;\r\n  border-radius: 35px;\r\n  padding: 5px;\r\n  margin-top: 20px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(5px);\r\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  color: #fff;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  letter-spacing: 1.2px;\r\n  margin-bottom: 40px;\r\n  text-shadow: 2px 2px rgba(0, 0, 0, 0.2);\r\n  justify-content: center;\r\n  :hover {\r\n    background: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\n\r\nconst Settings = () => {\r\n  const dispatch = useDispatch();\r\n  const { categories } = useSelector((state) => state.categories);\r\n  const { name, category, difficulty, questionType, amount } = useSelector(\r\n    (state) => state.options\r\n  );\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    dispatch(loadCategoriesAsync());\r\n  }, []);\r\n\r\n  const handleNameChange = (e) => {\r\n    dispatch({\r\n      type: optionsTypes.CHANGE_NAME,\r\n      payload: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleCategoryChange = (e) => {\r\n    dispatch({\r\n      type: optionsTypes.CHANGE_CATEGORY,\r\n      payload: e.target.value,\r\n    });\r\n  };\r\n  const handleDifficultyChange = (e) => {\r\n    dispatch({\r\n      type: optionsTypes.CHANGE_DIFFICULTY,\r\n      payload: e.target.value,\r\n    });\r\n  };\r\n  const handleQuestionTypeChange = (e) => {\r\n    dispatch({\r\n      type: optionsTypes.CHANGE_TYPE,\r\n      payload: e.target.value,\r\n    });\r\n  };\r\n  const handleAmountChange = (e) => {\r\n    dispatch({\r\n      type: optionsTypes.CHANGE_AMOUNT,\r\n      payload: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handlePlayGame = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loadQuestionsAsync(category, difficulty, questionType, amount));\r\n    history.push('/questions');\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledForm onSubmit={handlePlayGame}>\r\n        <StyledLabel htmlFor=\"name\">Your Name</StyledLabel>\r\n        <StyledInput\r\n          value={name}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={handleNameChange}\r\n        />\r\n        <StyledLabel htmlFor=\"questionCategory\">Choose Category</StyledLabel>\r\n        <StyledSelect name=\"questionCategory\" onChange={handleCategoryChange}>\r\n          <optiStyledOptionon value=\"\">ALL</optiStyledOptionon>\r\n          {categories &&\r\n            categories.map((category) => (\r\n              <StyledOption value={category.id} key={category.id}>\r\n                {category.name}\r\n              </StyledOption>\r\n            ))}\r\n        </StyledSelect>\r\n        <StyledLabel htmlFor=\"questionDifficulty\">\r\n          Choose Difficulty\r\n        </StyledLabel>\r\n        <StyledSelect\r\n          name=\"questionDifficulty\"\r\n          onChange={handleDifficultyChange}\r\n        >\r\n          <StyledOption value=\"\">ALL</StyledOption>\r\n          <StyledOption value=\"easy\">Easy</StyledOption>\r\n          <StyledOption value=\"medium\">Medium</StyledOption>\r\n          <StyledOption value=\"hard\">Hard</StyledOption>\r\n        </StyledSelect>\r\n        <StyledLabel htmlFor=\"questionType\">Choose Type</StyledLabel>\r\n        <StyledSelect name=\"questionType\" onChange={handleQuestionTypeChange}>\r\n          <StyledOption value=\"\">ALL</StyledOption>\r\n          <StyledOption value=\"multiple\">Multi Choice</StyledOption>\r\n          <StyledOption value=\"boolean\">True / False</StyledOption>\r\n        </StyledSelect>\r\n        <StyledLabel htmlFor=\"numberOfQuestion\">\r\n          Number of Questions\r\n        </StyledLabel>\r\n        <StyledInput\r\n          name=\"numberOfQuestion\"\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={handleAmountChange}\r\n          min=\"1\"\r\n          max=\"50\"\r\n        />\r\n\r\n        <StyledButton type=\"submit\">Play</StyledButton>\r\n      </StyledForm>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Settings;\r\n","import actions from './actions';\r\nimport UserService from '../../services/UserService';\r\nexport const loadCategoriesAsync = () => (dispatch) => {\r\n  UserService.getAllCategories()\r\n    .then((response) =>\r\n      dispatch(actions.categoriesLoad(response.data.trivia_categories))\r\n    )\r\n    .catch((error) => dispatch(actions.categoriesLoadErrors(error)));\r\n};\r\n\r\nexport const loadQuestionsAsync =\r\n  (amount, category, difficulty, type) => (dispatch) => {\r\n    UserService.getAllQuestions(amount, category, difficulty, type)\r\n      .then((response) =>\r\n        dispatch(actions.questionsLoad(response.data.results))\r\n      )\r\n      .catch((error) => dispatch(actions.questionsLoadErrors(error)));\r\n  };\r\n","import {\r\n  categoriesType,\r\n  helpersTypes,\r\n  optionsTypes,\r\n  questionsTypes,\r\n  rankTypes,\r\n  scoreAndIndexTypes,\r\n} from './actionTypes';\r\n\r\nexport const initialState = {\r\n  categories: {\r\n    categories: '',\r\n    errorMessage: null,\r\n  },\r\n\r\n  options: {\r\n    name: '',\r\n    category: '',\r\n    difficulty: '',\r\n    questionType: '',\r\n    amount: 10,\r\n  },\r\n  questions: {\r\n    questions: [],\r\n    errorMessage: null,\r\n  },\r\n  gameScoreAndIndex: {\r\n    index: 0,\r\n    score: 0,\r\n  },\r\n  helpers: {\r\n    markedAnswer: null,\r\n    answerSelected: false,\r\n  },\r\n  rank: {\r\n    rank: [],\r\n  },\r\n};\r\n\r\nconst categoriesReducer = (\r\n  state = initialState.categories,\r\n  { type, payload }\r\n) => {\r\n  switch (type) {\r\n    case categoriesType.CATEGORIES_LOAD:\r\n      return {\r\n        ...state,\r\n        categories: payload,\r\n      };\r\n    case categoriesType.CATEGORIES_LOAD_ERRORS:\r\n      return {\r\n        ...state,\r\n        errorMessage: payload,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nconst optionsReducer = (state = initialState.options, { type, payload }) => {\r\n  switch (type) {\r\n    case optionsTypes.CHANGE_NAME:\r\n      return {\r\n        ...state,\r\n        name: payload,\r\n      };\r\n    case optionsTypes.CHANGE_CATEGORY:\r\n      return {\r\n        ...state,\r\n        category: payload,\r\n      };\r\n    case optionsTypes.CHANGE_DIFFICULTY:\r\n      return {\r\n        ...state,\r\n        difficulty: payload,\r\n      };\r\n    case optionsTypes.CHANGE_TYPE:\r\n      return {\r\n        ...state,\r\n        questionType: payload,\r\n      };\r\n    case optionsTypes.CHANGE_AMOUNT:\r\n      return {\r\n        ...state,\r\n        amount: payload,\r\n      };\r\n    case optionsTypes.CLEAR_OPTIONS:\r\n      return {\r\n        name: '',\r\n        category: '',\r\n        difficulty: '',\r\n        questionType: '',\r\n        amount: 10,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst questionsReducer = (\r\n  state = initialState.questions,\r\n  { type, payload }\r\n) => {\r\n  switch (type) {\r\n    case questionsTypes.QUESTIONS_LOAD:\r\n      return {\r\n        ...state,\r\n        questions: payload,\r\n      };\r\n    case questionsTypes.QUESTIONS_LOAD_ERRORS:\r\n      return {\r\n        ...state,\r\n        errorMessage: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst scoreIndexReducer = (\r\n  state = initialState.gameScoreAndIndex,\r\n  { type, payload }\r\n) => {\r\n  switch (type) {\r\n    case scoreAndIndexTypes.SET_INDEX:\r\n      return {\r\n        ...state,\r\n        index: payload,\r\n      };\r\n    case scoreAndIndexTypes.SET_SCORE:\r\n      return {\r\n        ...state,\r\n        score: payload,\r\n      };\r\n    case scoreAndIndexTypes.CLEAR_SCORE_AND_INDEX:\r\n      return {\r\n        index: 0,\r\n        score: 0,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nconst helpersReducer = (state = initialState.helpers, { type, payload }) => {\r\n  switch (type) {\r\n    case helpersTypes.SET_MARKED_ANSWER:\r\n      return {\r\n        ...state,\r\n        markedAnswer: payload,\r\n      };\r\n    case helpersTypes.SET_ANSWER_SELECTED:\r\n      return {\r\n        ...state,\r\n        answerSelected: payload,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nconst rankReducer = (\r\n  state = initialState.rank,\r\n  { type, name, amount, score }\r\n) => {\r\n  switch (type) {\r\n    case rankTypes.ADD_TO_RANK: {\r\n      return {\r\n        ...state,\r\n        rank: [...state.rank, { name, amount, score }],\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\nconst Reducers = {\r\n  categoriesReducer,\r\n  optionsReducer,\r\n  questionsReducer,\r\n  scoreIndexReducer,\r\n  helpersReducer,\r\n  rankReducer,\r\n};\r\nexport default Reducers;\r\n","import Reducers from './redux/reducers/reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = () =>\r\n  combineReducers({\r\n    categories: Reducers.categoriesReducer,\r\n    options: Reducers.optionsReducer,\r\n    questions: Reducers.questionsReducer,\r\n    scoreAndIndex: Reducers.scoreIndexReducer,\r\n    helpers: Reducers.helpersReducer,\r\n    rank: Reducers.rankReducer,\r\n  });\r\n\r\nexport default rootReducer;\r\n","import thunk from 'redux-thunk';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport rootReducer from '../../rootReducer';\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [thunk];\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const enhancers = composeEnhancers(applyMiddleware(...middlewares));\r\n  return createStore(rootReducer(), enhancers);\r\n};\r\nexport default configureStore;\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector, useStore } from 'react-redux';\r\nimport {\r\n  helpersTypes,\r\n  scoreAndIndexTypes,\r\n} from '../redux/reducers/actionTypes';\r\nimport { useHistory } from 'react-router-dom';\r\nimport actions from '../redux/reducers/actions';\r\nimport configureStore from '../redux/store/configureStore';\r\nimport { render } from 'react-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Questions = () => {\r\n  const answerSelected = useSelector((state) => state.helpers.answerSelected);\r\n  const markedAnswer = useSelector((state) => state.helpers.markedAnswer);\r\n  const questions = useSelector((state) => state.questions.questions);\r\n  const questionIndex = useSelector((state) => state.scoreAndIndex.index);\r\n  const score = useSelector((state) => state.scoreAndIndex.score);\r\n  const { name, amount } = useSelector((state) => state.options);\r\n  const store = useStore();\r\n\r\n  const question = questions[questionIndex];\r\n  const answer = question && question.correct_answer;\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const decodeHTML = function (html) {\r\n    const txt = document.createElement('textarea');\r\n    txt.innerHTML = html;\r\n    return txt.value;\r\n  };\r\n\r\n  const addClass = (option) => {\r\n    if (!answerSelected) {\r\n      return '';\r\n    }\r\n    if (option === answer) {\r\n      return 'correct';\r\n    }\r\n    if (option === markedAnswer) {\r\n      return 'selected';\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(answer);\r\n    if (!question) {\r\n      return;\r\n    }\r\n    let incorrectAnswers = [...question.incorrect_answers];\r\n    setAnswers(\r\n      incorrectAnswers.concat(question.correct_answer).sort(() => {\r\n        return Math.random() - 0.5;\r\n      })\r\n    );\r\n  }, [answer, question]);\r\n\r\n  const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100vh;\r\n    align-items: center;\r\n  `;\r\n\r\n  const StyledQuestion = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: relative;\r\n    top: 5vh;\r\n    width: 90%;\r\n    text-align: center;\r\n    border-radius: 10px;\r\n    padding: 5px;\r\n    background: rgba(255, 255, 255, 0.2);\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    border-right: 1px solid rgba(255, 255, 255, 0.2);\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n    color: #fff;\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    letter-spacing: 1.2px;\r\n    margin-bottom: 60px;\r\n    text-shadow: 2px 2px rgba(0, 0, 0, 0.2);\r\n\r\n    p {\r\n      text-decoration: underline;\r\n    }\r\n    h1 {\r\n      font-size: 1.5rem;\r\n      margin-top: 10px;\r\n    }\r\n  `;\r\n\r\n  const StyledUl = styled.ul`\r\n    display: flex;\r\n    flex-direction: row;\r\n    position: relative;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    justify-content: center;\r\n  `;\r\n\r\n  const StyledLi = styled.li`\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 90%;\r\n\r\n    border-radius: 10px;\r\n    padding: 5px;\r\n    background: rgba(255, 255, 255, 0.2);\r\n    backdrop-filter: blur(5px);\r\n    box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid rgba(255, 255, 255, 0.5);\r\n    border-right: 1px solid rgba(255, 255, 255, 0.2);\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n    color: #fff;\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    letter-spacing: 1.2px;\r\n    margin-bottom: 40px;\r\n    text-shadow: 2px 2px rgba(0, 0, 0, 0.2);\r\n    :hover {\r\n      background: rgba(255, 255, 255, 0.5);\r\n    }\r\n  `;\r\n\r\n  const handleClickAnswer = (e) => {\r\n    dispatch({\r\n      type: helpersTypes.SET_ANSWER_SELECTED,\r\n      payload: true,\r\n    });\r\n    dispatch({\r\n      type: helpersTypes.SET_MARKED_ANSWER,\r\n      payload: e.target.textContent,\r\n    });\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    console.log(markedAnswer, answer);\r\n    if (markedAnswer === decodeHTML(answer)) {\r\n      console.log('poprawna odpowiedz');\r\n      dispatch({\r\n        type: scoreAndIndexTypes.SET_SCORE,\r\n        payload: score + 1,\r\n      });\r\n      console.log(score);\r\n    }\r\n\r\n    const idTimeout = setTimeout(() => {\r\n      dispatch({\r\n        type: scoreAndIndexTypes.SET_INDEX,\r\n        payload: questionIndex + 1,\r\n      });\r\n      const newState = store.getState();\r\n      const newScore = newState.scoreAndIndex.score;\r\n      console.log(newScore);\r\n      if (questionIndex + 1 === questions.length) {\r\n        clearTimeout(idTimeout);\r\n        console.log(score);\r\n        dispatch(actions.addToRank(name, amount, newScore));\r\n        history.push('/endgame');\r\n      }\r\n    }, 3500);\r\n\r\n    dispatch({\r\n      type: helpersTypes.SET_MARKED_ANSWER,\r\n      payload: null,\r\n    });\r\n    dispatch({\r\n      type: helpersTypes.SET_ANSWER_SELECTED,\r\n      payload: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        {!question ? (\r\n          <div>Loading...</div>\r\n        ) : (\r\n          <>\r\n            <StyledQuestion>\r\n              <p>Question {questionIndex + 1}</p>\r\n              <h1>{decodeHTML(question.question)}</h1>\r\n            </StyledQuestion>\r\n            <>\r\n              <StyledUl>\r\n                {answers.map((answer, i) => (\r\n                  <StyledLi\r\n                    key={i}\r\n                    onClick={handleClickAnswer}\r\n                    className={addClass(answer)}\r\n                  >\r\n                    {decodeHTML(answer)}\r\n                  </StyledLi>\r\n                ))}\r\n              </StyledUl>\r\n            </>\r\n            <div>\r\n              Score: {score}/{questions.length}\r\n            </div>\r\n            <button onClick={nextQuestion}>NEXT</button>\r\n          </>\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\nexport default Questions;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  optionsTypes,\r\n  questionsTypes,\r\n  scoreAndIndexTypes,\r\n} from '../redux/reducers/actionTypes';\r\n\r\nconst EndGame = () => {\r\n  const history = useHistory();\r\n  const score = useSelector((state) => state.scoreAndIndex.score);\r\n  const { name } = useSelector((state) => state.options);\r\n  const dispatch = useDispatch();\r\n  const handleNewGame = () => {\r\n    dispatch({\r\n      type: scoreAndIndexTypes.CLEAR_SCORE_AND_INDEX,\r\n    });\r\n    dispatch({\r\n      type: questionsTypes.QUESTIONS_LOAD,\r\n      payload: [],\r\n    });\r\n    dispatch({\r\n      type: optionsTypes.CLEAR_OPTIONS,\r\n    });\r\n\r\n    history.push('/settings');\r\n  };\r\n  const handleResetGame = () => {\r\n    dispatch({\r\n      type: scoreAndIndexTypes.CLEAR_SCORE_AND_INDEX,\r\n    });\r\n    history.push('/questions');\r\n  };\r\n  return (\r\n    <div>\r\n      <p>{name}</p>\r\n      <p>{score}</p>\r\n      <button onClick={handleNewGame}>New Game</button>\r\n      <button onClick={handleResetGame}>Restart</button>\r\n      <button onClick={() => history.push('/rank')}>Player Ranking</button>\r\n    </div>\r\n  );\r\n};\r\nexport default EndGame;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Rank = () => {\r\n  const usersRank = useSelector((state) => state.rank.rank);\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      {usersRank.map((user) => (\r\n        <>\r\n          <p>{user.name}</p>\r\n          <p>{user.amount}</p>\r\n          <p>{user.score}</p>\r\n        </>\r\n      ))}\r\n      <button onClick={() => history.goBack()}>Back</button>\r\n    </div>\r\n  );\r\n};\r\nexport default Rank;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { ReactComponent as Title } from '../assets/images/title.svg';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst StyledContainer = styled.div`\r\n  flex-direction: column;\r\n  position: relative;\r\n  width: 400px;\r\n  min-height: 400px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 10px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  backdrop-filter: blur(5px);\r\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  h1 {\r\n    position: relative;\r\n    color: #fff;\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    letter-spacing: 1px;\r\n    margin-bottom: 40px;\r\n    text-shadow: 2px 2px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled(Title)`\r\n  width: 100%;\r\n  fill: ${({ theme }) => theme.colors.gamboge};\r\n  padding: 20px;\r\n  filter: drop-shadow(4px 10px 12px rgba(0, 0, 0, 0.75));\r\n  display: flex;\r\n  margin-bottom: 50px;\r\n`;\r\n// const StyledButton = styled.button`\r\n//   display: flex;\r\n//   width: 50%;\r\n//   height: 50px;\r\n//   border: none;\r\n//   padding: 1em;\r\n//   border-radius: 10px;\r\n//   margin-bottom: 20px;\r\n//   font-size: 1.2rem;\r\n//   align-items: center;\r\n//   justify-content: center;\r\n//   box-shadow: 4px 4px 12px -4px rgba(0, 0, 0, 0.7);\r\n//   background-color: ${({ theme }) => theme.colors.mediumChampagne};\r\n// `;\r\n\r\nconst StyledH1 = styled.h1`\r\n  display: flex;\r\n  position: relative;\r\n  top: -20vh;\r\n  width: 80%;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(5px);\r\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  color: #fff;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  letter-spacing: 1.2px;\r\n  margin-bottom: 40px;\r\n  text-shadow: 2px 2px rgba(0, 0, 0, 0.2);\r\n`;\r\nconst StyledButton = styled.button`\r\n  display: flex;\r\n  position: relative;\r\n  width: 80%;\r\n  border-radius: 35px;\r\n  padding: 5px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n  backdrop-filter: blur(5px);\r\n  box-shadow: 0 25px 45px rgba(0, 0, 0, 0.1);\r\n  border: 1px solid rgba(255, 255, 255, 0.5);\r\n  border-right: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  color: #fff;\r\n  font-size: 1.5rem;\r\n  font-weight: 700;\r\n  letter-spacing: 1.2px;\r\n  margin-bottom: 40px;\r\n  text-shadow: 2px 2px rgba(0, 0, 0, 0.2);\r\n  justify-content: center;\r\n  :hover {\r\n    background: rgba(255, 255, 255, 0.5);\r\n  }\r\n`;\r\nconst StartGame = () => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledH1>I know that I don't know - guiz</StyledH1>\r\n      <StyledButton onClick={() => history.push('/settings')}>\r\n        Start Game\r\n      </StyledButton>\r\n      <StyledButton onClick={() => history.push('/rank')}>Rank</StyledButton>\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default StartGame;\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap');\r\n\r\n  html{\r\n    box-sizing: border-box;\r\n  }\r\n  *,*::after, *::before {\r\n    box-sizing: inherit;\r\n  margin: 0;\r\n    padding: 0;\r\n  }\r\n  \r\n  \r\nbody{\r\n  font-family: 'Montserrat', sans-serif;\r\n  overflow: hidden;\r\n}\r\n  a,button {\r\n    font-family: 'Montserrat', sans-serif;\r\n  }\r\n`;\r\n","export const theme = {\r\n  colors: {\r\n    white: '#FFFFFF',\r\n    black: '#111111',\r\n    richBlack: '#001219ff',\r\n    blueSapphire: '#005f73ff',\r\n    viridianGreen: '#0a9396ff',\r\n    middleBlueGreen: '#94d2bdff',\r\n    mediumChampagne: '#e9d8a6ff',\r\n    gamboge: '#ee9b00ff',\r\n    alloyOrange: '#ca6702ff',\r\n    mahogany: '#bb3e03ff',\r\n    rufous: '#ae2012ff',\r\n    rubyRed: '#9b2226ff',\r\n\r\n    // $gradient-top: linear-gradient(0deg, #001219ff, #005f73ff, #0a9396ff, #94d2bdff, #e9d8a6ff, #ee9b00ff, #ca6702ff, #bb3e03ff, #ae2012ff, #9b2226ff);\r\n    // $gradient-right: linear-gradient(90deg, #001219ff, #005f73ff, #0a9396ff, #94d2bdff, #e9d8a6ff, #ee9b00ff, #ca6702ff, #bb3e03ff, #ae2012ff, #9b2226ff);\r\n    // $gradient-bottom: linear-gradient(180deg, #001219ff, #005f73ff, #0a9396ff, #94d2bdff, #e9d8a6ff, #ee9b00ff, #ca6702ff, #bb3e03ff, #ae2012ff, #9b2226ff);\r\n    // $gradient-left: linear-gradient(270deg, #001219ff, #005f73ff, #0a9396ff, #94d2bdff, #e9d8a6ff, #ee9b00ff, #ca6702ff, #bb3e03ff, #ae2012ff, #9b2226ff);\r\n    // $gradient-top-right: linear-gradient(45deg, #001219ff, #005f73ff, #0a9396ff, #94d2bdff, #e9d8a6ff, #ee9b00ff, #ca6702ff, #bb3e03ff, #ae2012ff, #9b2226ff);\r\n    // $gradient-bottom-right: linear-gradient(135deg, #001219ff, #005f73ff, #0a9396ff, #94d2bdff, #e9d8a6ff, #ee9b00ff, #ca6702ff, #bb3e03ff, #ae2012ff, #9b2226ff);\r\n    // $gradient-top-left: linear-gradient(225deg, #001219ff, #005f73ff, #0a9396ff, #94d2bdff, #e9d8a6ff, #ee9b00ff, #ca6702ff, #bb3e03ff, #ae2012ff, #9b2226ff);\r\n    // $gradient-bottom-left: linear-gradient(315deg, #001219ff, #005f73ff, #0a9396ff, #94d2bdff, #e9d8a6ff, #ee9b00ff, #ca6702ff, #bb3e03ff, #ae2012ff, #9b2226ff);\r\n    // $gradient-radial: radial-gradient(#001219ff, #005f73ff, #0a9396ff, #94d2bdff, #e9d8a6ff, #ee9b00ff, #ca6702ff, #bb3e03ff, #ae2012ff, #9b2226ff);\r\n  },\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n  background: linear-gradient(to bottom, #f1f4f9, #dff1ff);\r\n  overflow: hidden;\r\n  .color {\r\n    position: absolute;\r\n    filter: blur(150px);\r\n  }\r\n  .color:nth-child(1) {\r\n    top: -10vh;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: #ff359b;\r\n  }\r\n  .color:nth-child(2) {\r\n    bottom: -15vh;\r\n    left: 10vw;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: #fffd87;\r\n  }\r\n  .color:nth-child(3) {\r\n    bottom: -50vh;\r\n    right: 30vw;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: #00d2ff;\r\n  }\r\n`;\r\n\r\nconst MainTemplate = ({ children }) => {\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"color\" />\r\n      <div className=\"color\" />\r\n      <div className=\"color\" />\r\n      {children}\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default MainTemplate;\r\n","import React from 'react';\r\nimport Settings from '../components/Settings';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from '../redux/store/configureStore';\r\nimport Questions from '../components/Questions';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport EndGame from '../components/EndGame';\r\nimport Rank from '../components/Rank';\r\nimport StartGame from '../components/StartGame';\r\nimport styled, { ThemeProvider } from 'styled-components';\r\nimport { GlobalStyles } from '../assets/styles/GlobalStyles';\r\nimport { theme } from '../assets/styles/theme';\r\nimport MainTemplate from '../components/templates/MainTemplate';\r\nconst store = configureStore();\r\n\r\nconst Wrapper = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.viridianGreen};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-content: center;\r\n  width: 100%;\r\n  height: 100vh;\r\n`;\r\n\r\nfunction Root() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <MainTemplate>\r\n        <Router>\r\n          <Provider store={store}>\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <StartGame />\r\n              </Route>\r\n              <Route path=\"/rank\">\r\n                <Rank />\r\n              </Route>\r\n              <Route path=\"/endgame\">\r\n                <EndGame />\r\n              </Route>\r\n              <Route path=\"/questions\">\r\n                <Questions />\r\n              </Route>\r\n              <Route exact path=\"/settings\">\r\n                <Settings />\r\n              </Route>\r\n            </Switch>\r\n          </Provider>\r\n        </Router>\r\n      </MainTemplate>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './views/Root';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}